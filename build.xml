<?xml version="1.0" encoding="UTF-8" ?>
<project name="HelloWorldAnt" default="clean" basedir=".">
    <!--
        定数の定義。
        build.xml上で使用する定数を定義する。
    -->
    <!--
        ビルドのベースディレクトリ。
        何もなければ${basedir}を使っても問題ありませんが、
        他プロジェクトのbuild.xmlからこのbuild.xmlのタスクを呼び出したとき、
        basedirがずれてしまうことがあるので、別に定義しておく。
    -->
    <dirname property="base" file="${ant.file}"/>

    <!-- JARファイル名 -->
    <property name="jarname" value="HelloWorldAnt" />

    <!-- ZIPファイル名 -->
    <property name="zipname" value="AntZip" />

    <!-- ビルド成果物ディレクトリ -->
    <property name="dir.target" value="target" />
    <property name="dir.target.classes" value="${dir.target}/classes" />
    <property name="dir.target.resources" value="${dir.target}/resources" />
    <property name="dir.target.dependency" value="${dir.target}/dependency" />

    <!-- srcディレクトリ -->
    <property name="dir.src" value="src" />

    <!-- リソースファイルディレクトリ -->
    <property name="dir.resources" value="resources" />

    <!-- libディレクトリ -->
    <property name="dir.lib" value="lib" />

    <!-- ソースファイルエンコード -->
    <property name="src.enc" value="UTF-8" />

    <!--
        クラスパスの設定。
        必要ライブラリの配置してあるパスをクラスパスに通す。
    -->
    <path id="build.lib">
        <fileset dir="${dir.lib}" >
            <include name="*" />
        </fileset>
    </path>

    <!-- JARファイル作成(開発用) -->
    <target name="makeJar" description="開発用JARファイル作成">
        <!-- 作業用ディレクトリのcleanup -->
        <antcall target="clean"/>
        <antcall target="compile"/>
        <echo message="JARファイルを作成します。" />
        <jar basedir="${dir.target.classes}" destfile="${base}/${dir.target}/${jarname}.jar" />
        <antcall target="filecopy">
            <param name="dir.env" value="${dir.resources}" />
        </antcall>
    </target>

    <!-- クラスファイル以外の必要なファイルのコピー -->
    <target name="filecopy" description="クラスファイル以外の必要なファイルのコピー">
        <echo message="クラスファイル以外の必要なファイルのコピーを行います。" />

        <!-- 古いファイルを削除 -->
        <delete file="${dir.target.resources}/*" />
        <delete file="${dir.target.dependency}/*" />

        <!-- 新しいフォルダを作成 -->
        <mkdir dir="${dir.target.resources}" />
        <mkdir dir="${dir.target.dependency}" />

        <!-- resourceファイルをコピー -->
        <copy todir="${dir.target.resources}">
            <fileset dir="${dir.env}">
                <include name="*" />
            </fileset>
        </copy>

        <!-- 依存性のあるファイルをコピー -->
        <copy todir="${dir.target.dependency}">
            <fileset dir="${dir.lib}">
                <include name="*" />
            </fileset>
        </copy>
    </target>

    <!-- コンパイル -->
    <target name="compile" description="コンパイル">
        <echo message="コンパイルを開始します。" />
        <mkdir dir="${dir.target.classes}"/>
        <javac classpathref="build.lib"
            srcdir="${dir.src}"
            destdir="${dir.target.classes}"
            encoding="${src.enc}"
            source="1.8"
            target="1.8"
            includeAntRuntime="false"
            debug="true"/>
    </target>

    <!-- デプロイ用ZIPファイルの作成 -->
    <target name="makeZip" description="デプロイ用ZIPファイルの作成">
        <echo message="成果物をZIPファイルに梱包します。" />
        <zip destfile="${base}/${dir.target}/${zipname}.zip"
            basedir="${dir.target}"
            excludes="${dir.target.classes}/*"
        />
    </target>

    <!-- ビルド成果物削除 -->
    <target name="clean" description="ビルド成果物削除">
        <delete dir="${dir.target}" />
    </target>
</project>
